{"version":3,"sources":["hooks/useLocalStorage.js","store/AllNotes.js","components/Sidebar.js","contexts/NoteContext.js","components/ViewNotes.js","components/EditNote.js","components/Container.js","methods/Methods.js","components/Notes.js","components/AddNote.js","components/ScratchPad.js","components/Favourites.js","components/Trash.js","contexts/ThemeContext.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","localValue","window","localStorage","getItem","JSON","parse","error","value","setValue","useEffect","setItem","stringify","AllNotes","id","uuidv4","title","description","created_at","favourite_note","trash","editing","scratchPadNote","Sidebar","className","to","icon","faPlusSquare","style","marginRight","faEdit","faTabletAlt","faStar","faTrash","NotesContext","React","createContext","ViewNotes","props","Tab","Container","defaultActiveKey","default","backgroundColor","themeState","tabBackground","color","foreground","Col","Form","inline","padding","FormControl","placeholder","searchTerm","onChange","handleChange","type","background","noteTab","sm","showNotes","footerTab","EditNote","currentNote","updatedNote","setNote","handleInputChange","event","target","name","onSubmit","preventDefault","updateNote","Group","controlId","Control","autoComplete","required","as","rows","navContent","note","deletePermanently","Nav","variant","Item","Link","eventKey","onClick","tabContent","Content","Pane","footerContent","setNotes","notes","trashMethod","clickUpdateButton","addFavouriteNote","removeFavouriteNote","downloadFile","lightMode","darkMode","themeStateBackground","lightBackground","foreGround","Row","xl","lg","OverlayTrigger","overlay","Tooltip","placement","faPenAlt","form","faEye","faTrashAlt","navigator","clipboard","writeText","faClipboard","faDownload","role","faMoon","href","faGithub","methods","noteId","selectedNote","map","element","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","Notes","useContext","theme","setThemeState","dark","light","allNotes","push","setSearchTerm","searchResults","setSearchResults","results","filter","toLowerCase","includes","AddNote","initialNoteState","Date","toDateString","newNote","setCreatedNote","show","setShow","reload","location","Toast","onClose","delay","autohide","reset","setTimeout","marginLeft","ScratchPad","scratchPad","setScratchPad","Favourites","favouriteNotes","Trash","trashNotes","deleteNote","themes","ThemeContext","App","basename","Provider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.369caa56.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, initialValue) => {\n    const [value, setValue] = useState(() => {\n        try {\n            const localValue = window.localStorage.getItem(key);\n            return localValue ? JSON.parse(localValue) : initialValue;\n        } catch (error) {\n            return initialValue;\n        }\n    });\n\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value]);\n\n    return [value, setValue];\n};\n\nexport default useLocalStorage;","import { v4 as uuidv4 } from 'uuid';\n\nexport const AllNotes = [\n    {\n        id:uuidv4(),\n        title:\"Welcome To Keep Notes\",\n        description: \"keep Notes is a free, open-source notes app for the web. It is a demo project only, and does not integrate with any database or cloud. Your notes are saved in local storage and will not be permanently persisted, but are available for download. You can create your note and update it whenever it needs.\",\n        created_at: \"Sat July 03 2021\",\n        favourite_note: false,\n        trash: false,\n        editing:false\n    },\n    {\n        id:uuidv4(),\n        title:\"Features\",\n        description: \"Plain text notes - take notes in an IDE-like environment that makes no assumptions Linked notes - use uuid syntax to link to notes within other notes Theme - light and dark mode available Search notes - easily search all notes No database - notes are only stored in the browser's local storage and are available for download and export to you alone Copy Note - You can copy your note with a single button No tracking or analytics - 'nuff said GitHub integration - self-hosted option is available for auto-syncing to a GitHub repository\",\n        created_at: \"Sun July 27 2021\",\n        favourite_note: false,\n        trash:false,\n        editing:false\n    }\n]\n\nexport const scratchPadNote = [\n    {\n        id:uuidv4(),\n        title:\"Scratchpad\",\n        description:\"The easiest note to find.\",\n        editing:false,\n        created_at: \"Wed July 28 2021\"\n    }\n]","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEdit, faPlusSquare, faStar, faTabletAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Sidebar = () => {\n    return(\n        <div className=\"sidebar\">\n            <br/>\n            <Link to=\"/addNote\"> <FontAwesomeIcon icon={faPlusSquare} style={{ marginRight:\".5rem\"}}/> Add Note</Link>\n            <Link to=\"/scratchPad\"><FontAwesomeIcon icon={faEdit} style={{ marginRight:\".5rem\"}}/> Scratchpad</Link>\n            <Link to=\"/\"><FontAwesomeIcon icon={faTabletAlt} style={{ marginRight:\".5rem\"}}/> Notes</Link>\n            <Link to=\"/favourites\"><FontAwesomeIcon icon={faStar} style={{ marginRight:\".5rem\"}}/> Favourites</Link>\n            <Link to=\"/trash\"><FontAwesomeIcon icon={faTrash} style={{ marginRight:\".5rem\"}}/> Trash</Link>\n        </div>\n\n    )\n}\n\nexport default Sidebar;","import React from 'react';\n\nconst NotesContext = React.createContext();\n\nexport default NotesContext;","import React from \"react\";\nimport {Col, Form, FormControl, Tab} from \"react-bootstrap\";\n\nexport const ViewNotes = (props) => {\n    return(\n        <section className=\"grid-container\">\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey={props.default}>\n                <div className=\"noteTab\" style={{\n                    backgroundColor: props.themeState.tabBackground,\n                    color: props.themeState.foreground\n                }}>\n                    <Col>\n                        <Form inline style={{padding: 10}}>\n                            <FormControl placeholder=\"Search Notes By Title\"\n                                         value={props.searchTerm}\n                                         onChange={props.handleChange}\n                                         type=\"text\"\n                                         style={{\n                                             backgroundColor: props.themeState.background,\n                                             color: props.themeState.foreground\n                                         }}\n                            />\n                        </Form>\n                        {props.noteTab}\n                    </Col>\n                </div>\n                <div>\n                    <div className=\"content\" style={{\n                        backgroundColor: props.themeState.background,\n                        color: props.themeState.foreground\n                    }}>\n                        <br/>\n                        <Col sm={12}>\n                            {props.showNotes}\n                        </Col>\n                    </div>\n                    <div className=\"footer\" style={{\n                        backgroundColor: props.themeState.tabBackground,\n                        color: props.themeState.foreground\n                    }}>\n                        {props.footerTab}\n                    </div>\n                </div>\n            </Tab.Container>\n        </section>\n    )\n}","import React, {useState,useEffect} from \"react\";\nimport {Container, Form} from \"react-bootstrap\";\n\nconst EditNote = (props) => {\n\n    const [ updatedNote, setNote ] = useState(props.currentNote);\n\n    useEffect(\n        () => {\n            setNote(props.currentNote)\n        },\n        [props]\n    )\n\n    const handleInputChange = (event) => {\n        const {name, value} = event.target;\n        setNote({ ...updatedNote , [name]:value});\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.updateNote(updatedNote.id, updatedNote);\n    }\n\n    return(\n        <Container className=\"text-center\">\n            <br/>\n            <Form id={props.currentNote.id} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Control style={{\n                        backgroundColor: props.themeState.background,\n                        color: props.themeState.foreground\n                    }} name=\"title\" autoComplete=\"off\" required type=\"text\" value={updatedNote.title} onChange={handleInputChange}/>\n                </Form.Group>\n                <br/>\n                <Form.Group>\n                    <Form.Control as=\"textarea\" rows={18} style={{\n                        backgroundColor: props.themeState.background,\n                        color: props.themeState.foreground\n                    }} name=\"description\" autoComplete=\"off\" required type=\"text\" value={updatedNote.description} onChange={handleInputChange}/>\n                </Form.Group>\n                <br/>\n            </Form>\n            <br/>\n        </Container>\n    )\n}\n\nexport default EditNote;","// noinspection RequiredAttributes\n\nimport React from \"react\";\nimport {Col, Nav, Row, Tab, OverlayTrigger, Tooltip} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faDownload, faEye, faMoon, faPenAlt, faTrash, faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {faClipboard, faStar} from \"@fortawesome/free-regular-svg-icons\";\nimport EditNote from \"./EditNote\";\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons\";\n\nexport const navContent = (note,deletePermanently) => {\n    return(\n        <>\n            <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                    <Nav.Link eventKey={note.id}>\n                        {\n                            (note.favourite_note === true) ? ( <span style={{ marginRight: '.2rem' }}> <FontAwesomeIcon icon={faStar} /> </span> ) : (<span> </span>)\n                        }\n                        {note.title}\n                        {\n                            (note.trash === true) ? ( <div className=\"fa-pull-right\" id=\"deleteBtn\"  onClick={() => deletePermanently(note.id)}> <FontAwesomeIcon icon={faTrash} /> </div>  ) : (<span> </span>)\n                        }\n                        <div className=\"hide\">Delete Permanently</div>\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n        </>\n    )\n};\n\nexport const tabContent = (note,updateNote,themeState) => {\n    return(\n        (note.editing === false) ? (\n            <>\n                <Tab.Content key={note.id}>\n                    <Tab.Pane eventKey={note.id}>\n                        <h3>{note.title}</h3>\n                        <br/>\n                        <p>{note.description}</p>\n                    </Tab.Pane>\n                </Tab.Content>\n            </>\n        ) : (\n                <>\n                    <Tab.Content key={note.id}>\n                        <Tab.Pane eventKey={note.id}>\n                            <EditNote currentNote={note} updateNote = {updateNote} themeState={themeState}/>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </>\n            )\n    )\n};\nexport const footerContent = (note,setNotes,notes,trashMethod,clickUpdateButton,addFavouriteNote,removeFavouriteNote,downloadFile,lightMode,darkMode,themeStateBackground,lightBackground,foreGround) => {\n    return(\n        <>\n            <Tab.Content key={note.id}>\n                <Tab.Pane className=\"m-1\" eventKey={note.id}>\n                    <Row>\n                        <Col xl={6} lg={12}>\n                            {\n                                (note.editing === false) ? (\n                                    <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Edit </Tooltip>} placement=\"top\">\n                                        <span className=\"spanButton\" onClick={() => clickUpdateButton(note.id,note,setNotes,notes)}> <FontAwesomeIcon icon={faPenAlt}/> </span>\n                                    </OverlayTrigger>\n                                ) : (\n                                    <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> View </Tooltip>} placement=\"top\">\n                                        <button className=\"iconButton\" form={note.id} type=\"submit\"> <FontAwesomeIcon icon={faEye} color={foreGround}/> </button>\n                                    </OverlayTrigger>\n                                )\n                            }\n                            {\n                                (note.favourite_note === false) ? (\n                                    <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Add To Favourites </Tooltip>} placement=\"top\">\n                                        <span className=\"spanButton\" onClick={() => addFavouriteNote(note.id,note,setNotes,notes)} > <FontAwesomeIcon icon={faStar}/> </span>\n                                    </OverlayTrigger>\n                                ) : (\n                                    <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Remove from Favourites </Tooltip>} placement=\"top\">\n                                        <span className=\"spanButton\" onClick={() => removeFavouriteNote(note.id,note,setNotes,notes)} > <FontAwesomeIcon icon={faStar}/> </span>\n                                    </OverlayTrigger>\n\n                                )\n                            }\n                            <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> {(note.trash === false) ? (\"Add to Trash\"):(\"Remove from Trash\")}  </Tooltip>} placement=\"top\">\n                                <span className=\"spanButton\" onClick={() => trashMethod(note.id,note,setNotes,notes)}> <FontAwesomeIcon icon={faTrashAlt}/> </span>\n                            </OverlayTrigger>\n                            <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Copy Text </Tooltip>} placement=\"top\">\n                                <span className=\"spanButton\" onClick={() => navigator.clipboard.writeText(note.title + \" \" + note.description)}><FontAwesomeIcon icon={faClipboard}/></span>\n                            </OverlayTrigger>\n                            <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Download Note </Tooltip>} placement=\"top\">\n                                <span className=\"spanButton\" onClick={() => downloadFile(note)}> <FontAwesomeIcon icon={faDownload}/></span>\n                            </OverlayTrigger>\n                        </Col>\n                        <Col className=\"text-xl-end text-lg-start text-muted\" xl={6} lg={12}>\n                            Created_at: {note.created_at}\n                            {\n                                (themeStateBackground === lightBackground) ? (\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id={'tooltip-bottom'}> Turn Dark Mode On </Tooltip>}>\n                                        <span role=\"img\" aria-label=\"sun\" className=\"spanButton\" onClick={darkMode}>\n                                            🌞\n                                        </span>\n                                    </OverlayTrigger>\n                                ) : (\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip id={'tooltip-bottom'}> Turn Dark Mode Off </Tooltip>}>\n                                        <span className=\"spanButton\" onClick={lightMode}>\n                                            <FontAwesomeIcon icon={faMoon} color=\"white\"/>\n                                        </span>\n                                    </OverlayTrigger>\n                                )\n                            }\n                            <a href=\"https://github.com/SiamAnzir/react-keep-notes\" className=\"spanButton\" style={{marginRight:\".8rem\"}}><FontAwesomeIcon icon={faGithub} color={foreGround}/></a>\n                        </Col>\n                    </Row>\n                </Tab.Pane>\n            </Tab.Content>\n        </>\n    )\n}","export const methods = {\n    addToFavouriteNote(noteId,selectedNote,setNotes,notes){\n        selectedNote.favourite_note = true;\n        setNotes(notes.map(note => (note.id === noteId ? selectedNote : note)));\n    },\n    addToTrash(noteId,selectedNote,setNotes,notes){\n        selectedNote.trash = true;\n        setNotes(notes.map(note => (note.id === noteId ? selectedNote : note)));\n    },\n    removeFromFavouriteNote(noteId,selectedNote,setNotes,notes){\n        selectedNote.favourite_note = false;\n        setNotes(notes.map(note => (note.id === noteId ? selectedNote : note)));\n    },\n    removeFromTrash(noteId,selectedNote,setNotes,notes) {\n        selectedNote.trash = false;\n        setNotes(notes.map(note => (note.id === noteId ? selectedNote : note)));\n    },\n    clickUpdateButton(noteId,selectedNote,setNotes,notes) {\n        selectedNote.editing = true;\n        setNotes(notes.map(note => (note.id === noteId ? selectedNote : note)));\n    },\n    downloadTxtFile(note){\n        const element = document.createElement(\"a\");\n        const file = new Blob([note.title + \"\\n\" + note.description], {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        element.download = note.created_at +\".txt\"\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    },\n    darkMode(setThemeState,theme){\n        setThemeState(theme.dark);\n    },\n    lightMode(setThemeState,theme){\n        setThemeState(theme.light);\n    }\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useContext, useEffect, useState} from \"react\";\nimport NotesContext from \"../contexts/NoteContext\";\nimport {ViewNotes} from \"./ViewNotes\";\nimport {tabContent,navContent,footerContent} from \"./Container\";\nimport {methods} from \"../methods/Methods\";\n\nconst Notes = () => {\n\n    const {notes, setNotes,theme,themeState, setThemeState} = useContext(NotesContext);\n\n    const darkMode = () => {\n        setThemeState(theme.dark);\n    };\n    const lightMode = () => {\n        setThemeState(theme.light);\n    };\n\n    const allNotes = [];\n    notes.map(note => (note.trash === false) ? ( allNotes.push(note) ) : ( allNotes ));\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleChange = event => {\n        setSearchTerm(event.target.value);\n    };\n\n    useEffect(() => {\n        const results = allNotes.filter(note =>\n            note.title.toLowerCase().includes(searchTerm)\n        );\n        setSearchResults(results);\n    }, [searchTerm]);\n\n    const updateNote = ( id , updatedNote) => {\n        updatedNote.editing = false;\n        setNotes(notes.map(note => (note.id === id ?  updatedNote  : note)));\n    }\n    const noteTab = (searchTerm === \"\") ? (allNotes.map(note => navContent(note))) : (searchResults.map(note => navContent(note)));\n\n    const showNotes = allNotes.map(note => tabContent(note,updateNote,themeState));\n\n    const footerTab =  allNotes.map(note => footerContent(note,setNotes,notes,methods.addToTrash,methods.clickUpdateButton,methods.addToFavouriteNote,methods.removeFromFavouriteNote,methods.downloadTxtFile,lightMode,darkMode,themeState.background,theme.light.background,themeState.foreground));\n\n    return(\n        <ViewNotes default={notes[0].id} noteTab={noteTab} showNotes={showNotes} footerTab={footerTab} searchTerm={searchTerm} handleChange={handleChange} themeState={themeState}/>\n    )\n}\n\nexport default Notes;","import React, {useContext , useState} from \"react\";\nimport NotesContext from \"../contexts/NoteContext\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {Container, Form, Row, Col,Toast} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPenAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nconst AddNote = () => {\n\n    const {notes, setNotes,themeState} = useContext(NotesContext);\n\n    const initialNoteState = {id:uuidv4(),title:\"\",description:\"\",created_at:new Date().toDateString(),favourite_note:false, trash:false,editing:false};\n    const [newNote, setCreatedNote] = useState(initialNoteState);\n    const [show, setShow] = useState(false);\n\n    const reload = () => {\n        window.location.reload();\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setNotes([...notes,newNote]);\n        event.target.reset();\n        setShow(true);\n        setTimeout(reload, 1500);\n    }\n\n    const handleInputChange = (event) => {\n        const {name,value} = event.target;\n        setCreatedNote({...newNote , [name]:value});\n    }\n    return(\n        <section className=\"mainContent\" style={{\n            backgroundColor: themeState.background,\n            color: themeState.foreground\n        }}>\n            <Container className=\"text-center\">\n                <Toast className=\"d-inline-block m-1\" style={{color:\"green\"}} onClose={() => setShow(false)} show={show} delay={1500} autohide>\n                    <Row>\n                        <Col>\n                            <h5>Note Created Successfully</h5>\n                        </Col>\n                    </Row>\n                </Toast>\n                <br/>\n                <Form onSubmit={handleSubmit} >\n                    <Form.Group>\n                        <Form.Control style={{\n                            backgroundColor: themeState.background,\n                            color: themeState.foreground\n                        }} name=\"title\" autoComplete=\"off\" required type=\"text\" placeholder=\"Title of your Note\" onChange={handleInputChange}/>\n                    </Form.Group>\n                    <br/>\n                    <Form.Group>\n                        <Form.Control as=\"textarea\" rows={18} style={{\n                            backgroundColor: themeState.background,\n                            color: themeState.foreground\n                        }} name=\"description\" autoComplete=\"off\" required type=\"text\" placeholder=\"Description of your note\" onChange={handleInputChange}/>\n                    </Form.Group>\n                    <br/>\n                    <footer>\n                        <Row>\n                            <Col className=\"text-start \">\n                                <button style={{ marginLeft: '.8rem' }} type=\"submit\"> <FontAwesomeIcon icon={faPenAlt}/> Save </button>\n                            </Col>\n                            <Col className=\"text-end text-muted\"> Created_at : {newNote.created_at} </Col>\n                        </Row>\n                    </footer>\n                </Form>\n                <br/>\n            </Container>\n        </section>\n    )\n}\n\nexport default AddNote;","// noinspection RequiredAttributes\n\nimport React, {useContext, useState} from \"react\";\nimport {Row, Col, OverlayTrigger, Tooltip, Toast} from \"react-bootstrap\";\nimport {scratchPadNote} from \"../store/AllNotes\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport {methods} from \"../methods/Methods\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faClipboard} from \"@fortawesome/free-regular-svg-icons\";\nimport {faDownload, faEye, faMoon, faPenAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport EditNote from \"./EditNote\";\nimport NotesContext from \"../contexts/NoteContext\";\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons\";\n\nconst ScratchPad = () => {\n\n    const [scratchPad,setScratchPad] = useLocalStorage('scratchPad',scratchPadNote);\n\n    const {theme,themeState, setThemeState} = useContext(NotesContext);\n    const [show, setShow] = useState(false);\n\n    const darkMode = () => {\n        setThemeState(theme.dark);\n    };\n    const lightMode = () => {\n        setThemeState(theme.light);\n    };\n\n    const updateNote = ( id , updatedNote) => {\n        updatedNote.editing = false;\n        setScratchPad(scratchPad.map(note => (note.id === id ?  updatedNote  : note)));\n    }\n\n    return(\n        <section>\n            <div className=\"mainContent\" style={{\n                backgroundColor: themeState.background,\n                color: themeState.foreground\n            }}>\n                <br/>\n                <Toast className=\"d-inline-block m-1\" style={{color:\"green\"}} onClose={() => setShow(false)} show={show} delay={1500} autohide>\n                    <Row>\n                        <Col>\n                            <h5>Note Copied Successfully</h5>\n                        </Col>\n                    </Row>\n                </Toast>\n                {\n                    (scratchPad[0].editing === false) ? (\n                        <div>\n                            <h3>{scratchPad[0].title}</h3>\n                            <p>{scratchPad[0].description}</p>\n                        </div>\n\n                    ) : (\n                        <div>\n                            <EditNote currentNote={scratchPad[0]} updateNote = {updateNote} themeState={themeState}/>\n                        </div>\n                    )\n                }\n            </div>\n            <div className=\"scratchPadFooter\" style={{\n                backgroundColor: themeState.tabBackground,\n                color: themeState.foreground\n            }}>\n                <Row className=\"\">\n                    <Col xl={6} lg={12}>\n                        {\n                            (scratchPad[0].editing === false) ? (\n                                <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Edit </Tooltip>} placement=\"top\">\n                                    <span className=\"spanButton\" onClick={() => methods.clickUpdateButton(scratchPad[0].id,scratchPad[0],setScratchPad,scratchPad)}> <FontAwesomeIcon icon={faPenAlt}/> </span>\n                                </OverlayTrigger>\n                            ) : (\n                                <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> View </Tooltip>} placement=\"top\">\n                                    <button className=\"iconButton\" form={scratchPad[0].id} type=\"submit\"> <FontAwesomeIcon icon={faEye} color={themeState.foreground}/> </button>\n                                </OverlayTrigger>\n                            )\n                        }\n                        <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Copy Text </Tooltip>} placement=\"top\">\n                            <span className=\"spanButton\" onClick={() =>{navigator.clipboard.writeText(scratchPad[0].title + \" \" + scratchPad[0].description) ; setShow(true);} }><FontAwesomeIcon icon={faClipboard}/></span>\n                        </OverlayTrigger>\n                        <OverlayTrigger overlay={<Tooltip id={'tooltip-bottom'}> Download Note </Tooltip>} placement=\"top\">\n                            <span className=\"spanButton\" onClick={() => methods.downloadTxtFile(scratchPad[0])}> <FontAwesomeIcon icon={faDownload}/></span>\n                        </OverlayTrigger>\n                    </Col>\n                    <Col className=\"text-xl-end text-lg-start text-muted\" xl={6} lg={12}>\n                        Created_At: {scratchPad[0].created_at}\n                        {\n                            (themeState.background === theme.light.background) ? (\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip id={'tooltip-bottom'}> Turn Dark Mode On </Tooltip>}>\n                                        <span role=\"img\" aria-label=\"sun\" className=\"spanButton\" onClick={darkMode}>\n                                            🌞\n                                        </span>\n                                </OverlayTrigger>\n                            ) : (\n                                <OverlayTrigger placement=\"top\" overlay={<Tooltip id={'tooltip-bottom'}> Turn Dark Mode Off </Tooltip>}>\n                                        <span className=\"spanButton\" onClick={lightMode}>\n                                            <FontAwesomeIcon icon={faMoon} color=\"white\"/>\n                                        </span>\n                                </OverlayTrigger>\n                            )\n                        }\n                        <a href=\"https://github.com/SiamAnzir/react-keep-notes\" className=\"spanButton\" style={{marginRight:\".8rem\"}}><FontAwesomeIcon icon={faGithub} color={themeState.foreground}/></a>\n                    </Col>\n                </Row>\n            </div>\n        </section>\n\n    )\n}\n\nexport default ScratchPad;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useContext, useEffect, useState} from \"react\";\nimport NotesContext from \"../contexts/NoteContext\";\nimport {ViewNotes} from \"./ViewNotes\";\nimport {tabContent,navContent,footerContent} from \"./Container\";\nimport {methods} from \"../methods/Methods\";\n\nconst Favourites = () => {\n\n    const {notes, setNotes,theme,themeState, setThemeState} = useContext(NotesContext);\n\n    const darkMode = () => {\n        setThemeState(theme.dark);\n    };\n    const lightMode = () => {\n        setThemeState(theme.light);\n    };\n\n    const favouriteNotes = [];\n    notes.map(note => (note.favourite_note === true && note.trash === false) ? ( favouriteNotes.push(note) ) : ( favouriteNotes ));\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleChange = event => {\n        setSearchTerm(event.target.value);\n    };\n\n    useEffect(() => {\n        const results = favouriteNotes.filter(note =>\n            note.title.toLowerCase().includes(searchTerm)\n        );\n        setSearchResults(results);\n    }, [searchTerm]);\n\n    const updateNote = ( id , updatedNote) => {\n        updatedNote.editing = false;\n        setNotes(notes.map(note => (note.id === id ?  updatedNote  : note)));\n    }\n\n    const noteTab = (searchTerm === \"\") ? (favouriteNotes.map(note => navContent(note))) : (searchResults.map(note => navContent(note)));\n\n\n    const showNotes = favouriteNotes.map(note => tabContent(note,updateNote,themeState));\n\n    const footerTab = favouriteNotes.map(note => footerContent(note,setNotes,notes,methods.addToTrash,methods.clickUpdateButton,methods.addToFavouriteNote,methods.removeFromFavouriteNote,methods.downloadTxtFile,lightMode,darkMode,themeState.background,theme.light.background,themeState.foreground));\n\n    return(\n        <ViewNotes default={notes[0].id} noteTab={noteTab} showNotes={showNotes} footerTab={footerTab} searchTerm={searchTerm} handleChange={handleChange} themeState={themeState}/>\n    )\n}\n\nexport default Favourites;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {ViewNotes} from \"./ViewNotes\";\nimport {tabContent,navContent,footerContent} from \"./Container\";\nimport NotesContext from \"../contexts/NoteContext\";\nimport {methods} from \"../methods/Methods\";\n\nconst Trash = () => {\n\n    const {notes, setNotes,theme,themeState, setThemeState} = useContext(NotesContext);\n\n    const darkMode = () => {\n        setThemeState(theme.dark);\n    };\n    const lightMode = () => {\n        setThemeState(theme.light);\n    };\n\n    const trashNotes = [];\n    notes.map(note => (note.trash === true) ? ( trashNotes.push(note) ) : ( trashNotes ));\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleChange = event => {\n        setSearchTerm(event.target.value);\n    };\n\n    useEffect(() => {\n        const results = trashNotes.filter(note =>\n            note.title.toLowerCase().includes(searchTerm)\n        );\n        setSearchResults(results);\n    },[searchTerm]);\n\n    const updateNote = ( id , updatedNote) => {\n        updatedNote.editing = false;\n        setNotes(notes.map(note => (note.id === id ?  updatedNote  : note)));\n    }\n\n    const deleteNote = (noteId) => {\n        setNotes(notes.filter((note) => {\n            return note.id !== noteId;\n        }));\n    }\n\n    const noteTab = (searchTerm === \"\") ? (trashNotes.map(note => navContent(note,deleteNote))) : (searchResults.map(note => navContent(note,deleteNote)));\n\n\n    const showNotes = trashNotes.map(note => tabContent(note,updateNote,themeState));\n\n    const footerTab = trashNotes.map(note => footerContent(note,setNotes,notes,methods.removeFromTrash,methods.clickUpdateButton,methods.addToFavouriteNote,methods.removeFromFavouriteNote,methods.downloadTxtFile,lightMode,darkMode,themeState.background,theme.light.background,themeState.foreground));\n\n    return(\n        <ViewNotes default={notes[0].id} noteTab={noteTab} showNotes={showNotes} footerTab={footerTab} searchTerm={searchTerm} handleChange={handleChange} themeState={themeState}/>\n    )\n}\n\nexport default Trash;\n","import React from \"react\";\n\nexport const themes = {\n    light: {\n        foreground: \"#323232\",\n        background: \"#FAFAFA\",\n        tabBackground: \"#e5e5e5\"\n    },\n    dark: {\n        foreground: \"#FAFAFA\",\n        background: \"#323232\",\n        tabBackground: \"#242424\"\n    }\n};\n\nexport const ThemeContext = React.createContext(themes);","import React, {useContext} from \"react\";\nimport {HashRouter as Router , Switch , Route } from \"react-router-dom\";\nimport './App.css';\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport {AllNotes} from \"./store/AllNotes\";\nimport Sidebar from \"./components/Sidebar\";\nimport Notes from \"./components/Notes\";\nimport AddNote from \"./components/AddNote\";\nimport ScratchPad from \"./components/ScratchPad\";\nimport Favourites from \"./components/Favourites\";\nimport Trash from \"./components/Trash\";\nimport NotesContext from \"./contexts/NoteContext\";\nimport {ThemeContext} from \"./contexts/ThemeContext\";\n\nconst App = () => {\n\n    const [notes,setNotes] = useLocalStorage('notes',AllNotes);\n    const theme = useContext(ThemeContext);\n    const [themeState, setThemeState] = useLocalStorage('theme', theme.light);\n\n    return (\n    <>\n      <Router basename='/'>\n          <Sidebar/>\n          <NotesContext.Provider value={{notes,setNotes,theme,themeState,setThemeState}}>\n              <Switch>\n                  <Route exact path=\"/addNote\" component={AddNote}/>\n                  <Route exact path=\"/scratchPad\" component={ScratchPad}/>\n                  <Route exact path=\"/\" component={Notes}/>\n                  <Route exact path=\"/favourites\" component={Favourites}/>\n                  <Route exact path=\"/trash\" component={Trash}/>\n                  <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n              </Switch>\n          </NotesContext.Provider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeContext} from \"./contexts/ThemeContext\";\nimport {themes} from \"./contexts/ThemeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeContext.Provider value={themes}>\n          <App />\n      </ThemeContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}